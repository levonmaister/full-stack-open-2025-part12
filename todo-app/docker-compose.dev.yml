services:
  app:
    image: hello-front-dev
    build:
      context: ./todo-frontend/. # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: hello-front-dev # This will name the container hello-front-dev
    environment: 
      - VITE_BACKEND_URL=http://localhost:8080/api
    depends_on:
      - backend # wait for the backend container to be started



  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - backend # wait for the backend container to be started



  mongo:
    image: initialized-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=the_database
    volumes:
      - ./mongo/mongo-init.js:/docker-entrpoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
  redis:
    image: redis:8
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./redis_data:/data
  backend:
    image: backend-fs-dev
    build:
      context: ./todo-backend/
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend/:/usr/src/app
    environment:
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongo
      - redis
    

volumes:
  mongo_data:
  redis_data:
  backend_data:
